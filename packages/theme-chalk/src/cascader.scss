@use 'sass:map';

@use 'mixins/mixins' as *;
@use 'mixins/var' as *;
@use 'common/var' as *;

@include b(cascader) {
  display: inline-block;
  position: relative;
  font-size: map.get($cascader, 'font-size');
  line-height: map.get($input-height, 'default');
  outline: none;

  &:not(.is-disabled):hover {
    .#{$namespace}-input__wrapper {
      cursor: pointer;
      box-shadow: 0 0 0 1px map.get($input, 'border-color-hover') inset;
    }
  }

  .#{$namespace}-input {
    cursor: pointer;

    .#{$namespace}-input__inner {
      text-overflow: ellipsis;
      cursor: pointer;

      &::selection {
        outline: none;
        border-color: map.get($input, 'border-color-focus');
      }
    }

    .#{$namespace}-input__suffix-inner {
      .#{$namespace}-icon {
        height: calc(100% - 2px);

        svg {
          vertical-align: middle;
        }
      }
    }

    .icon-arrow-down {
      transition: transform getCssVar('transition-duration');
      font-size: 10px;

      @include when(reverse) {
        transform: rotateZ(180deg);
      }
    }

    .icon-circle-close:hover {
      color: map.get($input, 'clear-color-hover');
    }

    @include when(focus) {
      .#{$namespace}-input__wrapper {
        box-shadow: 0 0 0 1px map.get($input, 'border-color-focus') inset;
      }
    }
  }

  @each $size in (large, small) {
    @include m($size) {
      font-size: map.get($input-font-size, $size);
      line-height: map.get($input-height, $size);
    }
  }

  @include when(disabled) {
    .#{$namespace}-cascader__label {
      z-index: calc(getCssVar('index', 'normal') + 1);
      color: getCssVar('disabled-text-color');
    }
  }

  // @include e(dropdown) {
  //   @include set-component-css-var('cascader', $cascader);
  // }

  @include e(dropdown) {
    margin: 5px 0;
    // font-size: getCssVar('cascader-menu-font-size');
    // border-radius: getCssVar('cascader-menu-radius');
    font-size: map.get($cascader, 'menu-font-size');
    border-radius: map.get($cascader, 'border-radius');

    // @include picker-popper(
    //   getCssVar('cascader-menu-fill'),
    //   getCssVar('cascader-menu-border'),
    //   getCssVar('cascader-menu-shadow')
    // );
    @include picker-popper(
      map.get($cascader, 'menu-fill'),
      map.get($cascader, 'menu-border'),
      map.get($cascader, 'menu-box-shadow')
    );

    &.#{$namespace}-popper {
      // box-shadow: getCssVar('cascader-menu-shadow');
      box-shadow: map.get($cascader, 'menu-box-shadow');
    }
  }

  @include e(tags) {
    position: absolute;
    left: 0;
    right: 30px;
    top: 50%;
    transform: translateY(-50%);
    display: flex;
    flex-wrap: wrap;
    line-height: normal;
    text-align: left;
    box-sizing: border-box;

    .#{$namespace}-tag {
      display: inline-flex;
      align-items: center;
      max-width: 100%;
      margin: 2px 0 2px 6px;
      text-overflow: ellipsis;
      // background: getCssVar('cascader-tag-background');
      background: map.get($cascader, 'tag-bg-color');
      color: getCssVar('text-color', 'primary');

      &:not(.is-hit) {
        border-color: transparent;
      }

      > span {
        flex: 1;
        overflow: hidden;
        text-overflow: ellipsis;
      }

      .#{$namespace}-icon-close {
        flex: none;
        background-color: getCssVar('text-color', 'secondary');
        color: getCssVar('color-white');

        &:hover {
          background-color: getCssVar('text-color', 'placeholder');
        }
      }
    }
  }

  @include e(collapse-tags) {
    white-space: normal;
    z-index: getCssVar('index-normal');
    display: flex;
    align-items: center;
    flex-wrap: wrap;
  }

  @include e(collapse-tag) {
    line-height: inherit;
    height: inherit;
    display: flex;
  }

  @include e(suggestion-panel) {
    border-radius: map.get($cascader, 'menu-border-radius');
  }

  @include e(suggestion-list) {
    max-height: 204px;
    margin: 0;
    padding: 6px 0;
    font-size: getCssVar('font-size', 'base');
    color: map.get($cascader, 'menu-text-color');
    text-align: center;
  }

  @include e(suggestion-item) {
    display: flex;
    justify-content: space-between;
    align-items: center;
    height: 34px;
    padding: 0 15px;
    text-align: left;
    outline: none;
    cursor: pointer;

    &:hover,
    &:focus {
      background: map.get($cascader, 'node-bg-color-hover');
    }

    &.is-checked {
      color: map.get($cascader, 'menu-text-color-selected');
      font-weight: bold;
    }

    > span {
      margin-right: 10px;
    }
  }

  @include e(empty-text) {
    margin: 10px 0;
    color: map.get($cascader, 'empty-text-color');
  }

  @include e(search-input) {
    flex: 1;
    height: 24px;
    min-width: 60px;
    margin: 2px 0 2px map.get($input-padding-horizontal, 'default')-$border-width;
    padding: 0;
    color: map.get($cascader, 'menu-text-color');
    border: none;
    outline: none;
    box-sizing: border-box;
    font-size: getCssVar('font-size', 'base');
    background: transparent;

    &::placeholder {
      // two input overlap
      // color: transparent;
      color: getCssVar('text-color', 'placeholder');
    }
  }
}
