@use 'sass:map';

@use 'mixins/mixins' as *;
@use 'mixins/var' as *;
@use 'mixins/utils' as *;
@use 'common/var' as *;

@include b(link) {
  display: inline-flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
  vertical-align: middle;
  position: relative;
  text-decoration: none;
  outline: none;
  cursor: pointer;
  padding: 0;
  font-size: map.get($link, 'font-size');
  font-weight: map.get($link, 'font-weight');

  color: map.get($link, 'default-text-color');

  &:hover {
    color: map.get($link, 'default-text-color-hover');
  }

  @include when(underline) {
    &:hover:after {
      content: '';
      position: absolute;
      left: 0;
      right: 0;
      height: 0;
      bottom: 0;
      border-bottom: 1px solid map.get($link, 'default-text-color-hover');
    }
  }

  @include when(disabled) {
    color: map.get($link, 'text-color-disabled');
    cursor: not-allowed;
  }

  & [class*='#{$namespace}-icon-'] {
    & + span {
      margin-left: 4px;
    }
  }

  &.#{$namespace}-link--default {
    color: map.get($link, 'description-margin-top');
    &:hover {
      color: map.get($link, 'default-text-color-hover');
    }

    &:after {
      border-color: map.get($link, 'default-text-color');
    }
  }

  @include e(inner) {
    display: inline-flex;
    justify-content: center;
    align-items: center;
  }

  @each $type in $types {
    &.#{$namespace}-link--#{$type} {
      color: getCssVar('color', $type);

      &:hover {
        color: getCssVar('color', $type, #{if($type == info, 10, 5)});
      }

      &:after {
        border-color: getCssVar('color', $type);
      }

      @include when(disabled) {
        color: getCssVar('color', 'info-7');
      }

      @include when(underline) {
        &:hover:after {
          border-color: getCssVar('color', $type);
        }
      }
    }
  }
}
