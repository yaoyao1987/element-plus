@use 'sass:map';

@use 'mixins/mixins' as *;
@use 'mixins/var' as *;
@use 'common/var' as *;

@include b(message) {
  min-width: map.get($message, 'min-width');
  box-sizing: border-box;
  border-radius: getCssVar('border-radius-base');
  position: fixed;
  left: 50%;
  top: 20px;
  transform: translateX(-50%);
  transition: opacity 0.3s, transform 0.4s, top 0.4s;
  background-color: map.get($message, 'bg-color');
  transition: opacity getCssVar('transition-duration'), transform 0.4s, top 0.4s;
  padding: map.get($message, 'padding');
  display: flex;
  align-items: center;

  @include when(center) {
    justify-content: center;
  }

  @include when(closable) {
    .#{$namespace}-message__content {
      padding-right: 24px;
      color: getCssVar('text-color', 'primary');
    }
  }

  p {
    margin: 0;
  }

  @each $type in (success, info, warning, error) {
    @include m($type) {
      box-shadow: var(--shadow-2);
      .#{$namespace}-message__content {
        color: getCssVar('message', 'text-color');
      }
    }

    & .#{$namespace}-message-icon--#{$type} {
      color: getCssVar('color', if($type == info, 'primary', $type));
    }
  }

  @include e(icon) {
    margin-right: 8px;
  }

  .#{$namespace}-message__badge {
    position: absolute;
    top: -8px;
    right: -8px;
  }

  @include e(content) {
    padding: 0;
    font-size: 14px;
    line-height: 1;
    &:focus {
      outline-width: 0;
    }
  }

  & .#{$namespace}-message__closeBtn {
    position: absolute;
    top: 50%;
    right: 12px;
    transform: translateY(-50%);
    cursor: pointer;
    color: map.get($message, 'close-icon-color');
    font-size: map.get($message, 'close-font-size');

    &:focus {
      outline-width: 0;
    }
    &:hover {
      color: map.get($message, 'close-icon-color-hover');
    }
  }
}

.#{$namespace}-message-fade-enter-from,
.#{$namespace}-message-fade-leave-to {
  opacity: 0;
  transform: translate(-50%, -100%);
}
